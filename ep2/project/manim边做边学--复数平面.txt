标题: manim边做边学--复数平面
作者: wang_yb
发布时间: 
2024-10-23 10:14

阅读数量: 126

所谓复数平面，就是一种二维坐标系统，用于几何表示复数的场景，其中横轴代表实部，纵轴代表虚部。
每个点对应一个唯一的复数，反之亦然，这种表示方法使得复数的加法、乘法等运算可以通过直观的图形变换来理解。
ComplexPlane是Manim库中用于处理复数平面的类。
它不仅提供了标准的笛卡尔坐标系，还特别针对复数操作进行了优化，使得复数及其变换的可视化变得更加直观。
通过ComplexPlane，我们可以轻松地绘制出复数点、向量以及执行复数变换，如旋转、缩放等。
本篇将介绍Manim中的ComplexPlane对象以及一些常用的使用示例。
ComplexPlane继承自上一篇介绍的NumberPlane，
ComplexPlane没有自己特有的参数，和NumberPlane的参数是一样的。
和NumberPlane一样，ComplexPlane也包含了坐标系统CoordinateSystem类提供的方法，
不过，在复数平面中，我比较常用的是以下3个方法：
下面通过示例来演示复数平面ComplexPlane的多种功能，包括复数平面的网格与坐标轴，复数点的标记与展示、复数平面上的函数图像、复数变换动画等。
让ComplexPlane成为我们展示复数概念和性质的有力工具。
3.1. 网格与坐标轴
创建一个复数平面ComplexPlane，绘制网格线和坐标轴，设置实部的范围[-5, 5]，虚部的范围[-4, 4]，最后再给坐标轴加上刻度值。
plane = ComplexPlane(
    x_range=[-5, 5],
    y_range=[-4, 4],
    x_length=6,
    y_length=4,
)

# 加上刻度值
plane.add_coordinates()
3.2. 复数点的标记
在复数平面坐标上添加2个复数点，再给这两个点添加标签，显示其复数的值。
# 创建复数平面
plane = ComplexPlane(
    x_range=[-5, 5],
    y_range=[-5, 5],
)
plane.add_coordinates()

# 添加复数的点
d1 = Dot(plane.n2p(3 + 2j))
d2 = Dot(plane.n2p(-4 - 2j))
3.3. 复数运算
复数平面上添加两个点，然后计算这两个复数相加的结果，并将计算过程在复数平面上用动画显示出来。
# 创建复数平面
plane = ComplexPlane(
    x_range=[-1, 8],
    y_range=[-1, 8],
)
plane.add_coordinates()

# 初始的两个点
d1 = Dot(plane.n2p(2 + 1j))
d2 = Dot(plane.n2p(2 + 4j))

# 相加后的点
d3 = Dot(plane.n2p(4 + 5j))
3.4. 复数变换
最后，是复数点经过一个函数变换后，在复数平面上显示新的位置。
示例中先初始4个点，然后经过函数$ f(x)=2^x $的变换后，显示其变换后的位置。
其中用到了ComplexPlane的主要方法n2p和p2n。
# 创建复数平面
plane = ComplexPlane(
    x_range=[-5, 5],
    y_range=[-5, 5],
)
plane.add_coordinates()

d1 = LabeledDot(
    label=MathTex("1"),
    point=plane.n2p(2 + 1j),
)
d2 = LabeledDot(
    label=MathTex("2"),
    point=plane.n2p(2 + 3j),
)
d3 = LabeledDot(
    label=MathTex("3"),
    point=plane.n2p(-2 - 2j),
)
d4 = LabeledDot(
    label=MathTex("4"),
    point=plane.n2p(-3 + 2j),
)
self.add(d1, d2, d3, d4)

# 变换后点的位置
pd1 = np.exp2(plane.p2n(d1.get_center()))
pd2 = np.exp2(plane.p2n(d2.get_center()))
pd3 = np.exp2(plane.p2n(d3.get_center()))
pd4 = np.exp2(plane.p2n(d4.get_center()))
文中的代码只是关键部分的截取，完整的代码共享在网盘中（complex_plane.py），
下载地址:完整代码(访问密码: 6872)
公告
